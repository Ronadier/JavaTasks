import Helpers.InputHelper;
import Helpers.JSONHelper;

import java.io.*;
import java.util.List;

public class Task2hard {
  public static void main(String[] args) throws IOException {
    String str = InputHelper.getStr();
    int maxLength = InputHelper.getInt();
    List<String> forbiddenWords = InputHelper.getForbiddenWords();

    JSONHelper.generateAndPrintJSONForTask2(str,forbiddenWords,maxLength);
  }
}
/*
"Для тех, кто хочет посложнее, анализатор текста должен вести себя несколько иначе. Он должен получать на вход три параметра: анализируемый текст, максимально допустимую длину, список запрещенных слов. Результатом работы этой функции должен быть JSON, в котором будут следующие поля:

- ""length"" - длина строки
- ""pure_length"" - длина строки без учета пробелов
- ""origin_text"" - текст, полученный на входе
- ""pure_text"" - текст, в котором все запрещенные слова из списка была заменены на три звездочки
- ""pure_short_text"" - текст из pure_text, обрезанный на максимальном символе. Если этот символ не последний, надо это показать, добавив многоточие в конец.

Пример:

Дано:

text: «Не забывайте о том, что все великие волшебники в истории в свое время были такими же, как мы, – школьниками. Если у них получилось, то получится и у нас», – Гарри Поттер.
maxlen: 35
forbidden_words: [""волшебники"", ""Гарри Поттер""]

Результат функции:

{
""length"":171,
""pure_length"":140
""origin_text"":""«Не забывайте о том, что все великие волшебники в истории в свое время были такими же, как мы, – школьниками. Если у них получилось, то получится и у нас», – Гарри Поттер.""
""pure_text"":""«Не забывайте о том, что все великие *** в истории в свое время были такими же, как мы, – школьниками. Если у них получилось, то получится и у нас», – ***.""
""pure_short_text"":""Не забывайте о том, что все великие...""
}"
 */